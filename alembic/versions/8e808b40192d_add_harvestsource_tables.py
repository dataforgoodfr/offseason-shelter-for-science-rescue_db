"""Add HarvestSource tables

Revision ID: 8e808b40192d
Revises: 4554acc5b22d
Create Date: 2025-07-21 21:41:49.358212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8e808b40192d'
down_revision: Union[str, Sequence[str], None] = '4554acc5b22d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('harvest_frequencies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('harvest_source_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('harvest_sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dg_id', sa.String(), nullable=False),
    sa.Column('dg_name', sa.String(), nullable=False),
    sa.Column('dg_title', sa.String(), nullable=False),
    sa.Column('dg_source', sa.String(), nullable=False),
    sa.Column('dg_created', sa.DateTime(), nullable=False),
    sa.Column('dg_total_datasets', sa.Integer(), nullable=False),
    sa.Column('harvest_source_type_id', sa.Integer(), nullable=False),
    sa.Column('harvest_frequency_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['harvest_frequency_id'], ['harvest_frequencies.id'], ),
    sa.ForeignKeyConstraint(['harvest_source_type_id'], ['harvest_source_types.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dg_id')
    )
    op.create_table('harvest_source_dataset',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('harvest_source_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['harvest_source_id'], ['harvest_sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('harvest_source_id', 'dataset_id', name='uq_harvest_source_dataset')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('harvest_source_dataset')
    op.drop_table('harvest_sources')
    op.drop_table('harvest_source_types')
    op.drop_table('harvest_frequencies')
    # ### end Alembic commands ###
