"""Relations, default values.

Revision ID: bdceafc77878
Revises: 2f9f22e8382c
Create Date: 2025-07-01 14:12:27.498641

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "bdceafc77878"
down_revision: Union[str, Sequence[str], None] = "2f9f22e8382c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "datasets", ["dg_id"])
    op.drop_column("datasets", "dg_organization_id")
    op.drop_column("datasets", "dg_created")
    op.create_unique_constraint(None, "organizations", ["dg_id"])
    op.alter_column(
        "resources",
        "dg_resource_locator_function",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "resources",
        "dg_resource_locator_protocol",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "resources", "dg_mimetype", existing_type=sa.VARCHAR(), nullable=True
    )
    op.create_unique_constraint(None, "resources", ["dg_id"])
    op.alter_column(
        "organizations",
        "created_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
    )
    op.alter_column(
        "organizations",
        "updated_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
        onupdate=sa.text("NOW()"),
    )
    op.alter_column(
        "datasets",
        "created_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
    )
    op.alter_column(
        "datasets",
        "updated_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
        onupdate=sa.text("NOW()"),
    )
    op.alter_column(
        "resources",
        "created_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
    )
    op.alter_column(
        "resources",
        "updated_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
        onupdate=sa.text("NOW()"),
    )
    op.alter_column(
        "assets",
        "created_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
    )
    op.alter_column(
        "assets",
        "updated_at",
        existing_type=sa.DateTime(),
        existing_nullable=False,
        server_default=sa.text("NOW()"),
        onupdate=sa.text("NOW()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "resources", type_="unique")
    op.alter_column(
        "resources", "dg_mimetype", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "resources",
        "dg_resource_locator_protocol",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "resources",
        "dg_resource_locator_function",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.drop_constraint(None, "organizations", type_="unique")
    op.add_column(
        "datasets",
        sa.Column(
            "dg_created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "datasets",
        sa.Column(
            "dg_organization_id", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "datasets", type_="unique")
    # ### end Alembic commands ###
